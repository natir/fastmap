var searchIndex = JSON.parse('{\
"in_place_fastx":{"doc":"","t":[0,0,4,13,13,13,13,13,13,6,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,3,8,3,0,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,12,11,11,11,11,11,11,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["error","fastq","Error","MapFile","MetaDataFile","NoNewLineInBlock","NotAFastqFile","OpenFile","PartialRecord","Result","borrow","borrow_mut","deref","deref_mut","drop","fmt","fmt","from","init","into","source","to_string","try_from","try_into","type_id","source","source","source","Block","Parser","Record","block","block","borrow","borrow","borrow_mut","borrow_mut","comment","data","deref","deref","deref_mut","deref_mut","drop","drop","file","file_with_blocksize","from","from","init","init","into","into","is_empty","len","multithread_by_block","multithread_by_block_with_blocksize","new","plus","quality","record","sequence","try_from","try_from","try_into","try_into","type_id","type_id","Producer","Reader","borrow","borrow","borrow_mut","borrow_mut","deref","deref","deref_mut","deref_mut","drop","drop","from","from","init","init","into","into","into_iter","new","new","next","next_block","next_record","try_from","try_from","try_into","try_into","type_id","type_id","with_blocksize"],"q":["in_place_fastx","","in_place_fastx::error","","","","","","","","","","","","","","","","","","","","","","","in_place_fastx::error::Error","","","in_place_fastx::fastq","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","in_place_fastx::fastq::block","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","Block reperesent a section of file memory mapped in file …","Trait allow parsing of fastq","Record store a fastq record in public field","","","","","","","","","","","","","","","Open a file and run record function on each function …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,3,4,0,0,0,0,5,6,7,6,7,6,7,6,7,6,7,6,7,5,5,6,7,6,7,6,7,7,7,5,5,7,6,6,5,6,6,7,6,7,6,7,0,0,8,9,8,9,8,9,8,9,8,9,8,9,8,9,8,9,8,8,9,8,8,9,8,9,8,9,8,9,8],"f":[null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[],["usize",15]],[[]],[[],[["error",8],["option",4]]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,null,null,null,null,[[["block",3]],["result",6]],[[]],[[]],[[]],[[]],null,[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],["result",6]],[[["u64",15]],["result",6]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[],["bool",15]],[[],["usize",15]],[[],["result",6]],[[["u64",15]],["result",6]],[[["usize",15],["mmap",3]]],null,null,[[["record",3]]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,null,[[]],[[]],[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[],["result",6]],[[["block",3]]],[[],["option",4]],[[],[["result",6],["option",4]]],[[],[["result",6],["option",4]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[["u64",15]],[["error",4],["result",4]]]],"p":[[4,"Error"],[13,"MetaDataFile"],[13,"OpenFile"],[13,"MapFile"],[8,"Parser"],[3,"Record"],[3,"Block"],[3,"Producer"],[3,"Reader"]]}\
}');
if (window.initSearch) {window.initSearch(searchIndex)};